# editorconfig.org

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
indent_style = space
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:error
dotnet_style_null_propagation = true:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
dotnet_style_prefer_auto_properties = true:error
dotnet_style_object_initializer = true:error
dotnet_style_collection_initializer = true:error
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:error
dotnet_style_prefer_conditional_expression_over_return = true:error

[*.proto]
charset = utf-8
indent_size = 2

[*{.json,.js}]
indent_size = 3

# Generated code
[*{_AssemblyInfo.cs,.notsupported.cs,AsmOffsets.cs}]
generated_code = true

# C# files
[*.cs]
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true
charset = utf-8-bom

align_multiline_parameter = false
align_multiline_extends_list = false
align_multiline_binary_expressions_chain = false
align_linq_query = false
place_attribute_on_same_line = false
empty_block_style = together_same_line
space_within_single_line_array_initializer_braces = true
use_continuous_indent_inside_parens = true
indent_type_constraints = true
stick_comment = false
alignment_tab_fill_style = use_spaces

align_multiline_array_and_object_initializer = false
align_multiline_switch_expression = false
align_multiline_switch_expression = false
align_multiline_property_pattern = false
indent_anonymous_method_block = false
align_multiline_argument = false
align_tuple_components = false
align_first_arg_by_paren = false
align_multiline_expression = false
align_multiline_statement_conditions = true
align_multline_type_parameter_constrains = true
align_multiline_calls_chain = false
align_multiline_binary_expressions_chain = false
int_align_switch_sections = false
remove_blank_lines_near_braces_in_declarations = true
blank_lines_after_start_comment = 0
blank_lines_after_using_list = 1
blank_lines_inside_namespace = 0
blank_lines_after_file_scoped_namespace_directive = 1
blank_lines_around_auto_property = 1
blank_lines_around_invocable = 1
blank_lines_around_single_line_invocable = 1
blank_lines_after_control_transfer_statements = 1
blank_lines_after_block_statements = 1
blank_lines_around_block_case_section = 1
blank_lines_around_multiline_case_section = 1
brace_style = new_line
braces_for_ifelse = required
braces_for_for = required
braces_for_foreach = required
braces_for_while = required
braces_for_dowhile = required
braces_for_lock = required
outdent_dots = false

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_after_if = true
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
csharp_space_around_binary_operators = before_and_after

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:error

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error

# Types: use keywords instead of BCL types, and permit var only when the type is clear
csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:error
csharp_style_var_elsewhere = true:error
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = error
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.severity = error
dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
dotnet_naming_style.pascal_case_style.severity = error


# static fields should have _ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = error
dotnet_naming_rule.static_fields_should_have_prefix.symbols  = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style = camel_case_underscore_style
dotnet_naming_symbols.static_fields.severity = error
dotnet_naming_symbols.static_fields.applicable_kinds   = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_symbols.static_fields.applicable_accessibilities = private, internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix = _
dotnet_naming_style.static_prefix_style.capitalization = camel_case
dotnet_naming_style.static_prefix_style.severity = error

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = error
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.severity = error
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case
dotnet_naming_style.camel_case_underscore_style.severity = error

# Code style defaults
csharp_using_directive_placement = outside_namespace:error
dotnet_sort_system_directives_first = true:error
csharp_prefer_braces = true:error
csharp_preserve_single_line_blocks = false:error
csharp_preserve_single_line_statements = false:error
csharp_prefer_static_local_function = true:error
csharp_prefer_simple_using_statement = false:none
csharp_style_prefer_switch_expression = true:error
dotnet_style_readonly_field = true:error

# Expression-level preferences
dotnet_style_object_initializer = true:error
dotnet_style_collection_initializer = true:error
dotnet_style_explicit_tuple_names = true:error
dotnet_style_coalesce_expression = true:error
dotnet_style_null_propagation = true:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
dotnet_style_prefer_inferred_tuple_names = true:error
dotnet_style_prefer_inferred_anonymous_type_member_names = true:error
dotnet_style_prefer_auto_properties = true:error
dotnet_style_prefer_conditional_expression_over_assignment = true:error
dotnet_style_prefer_conditional_expression_over_return = true:error
csharp_prefer_simple_default_expression = true:error

# Expression-bodied members
csharp_style_expression_bodied_methods = false:error
csharp_style_expression_bodied_constructors = false:error
csharp_style_expression_bodied_operators = false:error
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = true:silent

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:error
csharp_style_pattern_matching_over_as_with_null_check = true:error
csharp_style_inlined_variable_declaration = true:error

# Null checking preferences
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:error

# Other features
csharp_style_prefer_index_operator = false:none
csharp_style_prefer_range_operator = false:none
csharp_style_pattern_local_over_anonymous_function = false:none

# Space preferences
csharp_space_after_cast = false:error
csharp_space_after_colon_in_inheritance_clause = true:error
csharp_space_after_comma = true:error
csharp_space_after_dot = false:error
csharp_space_after_keywords_in_control_flow_statements = true:error
csharp_space_after_semicolon_in_for_statement = true:error
csharp_space_around_binary_operators = before_and_after:error
csharp_space_around_declaration_statements = do_not_ignore:error
csharp_space_before_colon_in_inheritance_clause = true:error
csharp_space_before_comma = false:error
csharp_space_before_dot = false:error
csharp_space_before_open_square_brackets = false:error
csharp_space_before_semicolon_in_for_statement = false:error
csharp_space_between_empty_square_brackets = false:error
csharp_space_between_method_call_empty_parameter_list_parentheses = false:error
csharp_space_between_method_call_name_and_opening_parenthesis = false:error
csharp_space_between_method_call_parameter_list_parentheses = false:error
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false:error
csharp_space_between_method_declaration_name_and_open_parenthesis = false:error
csharp_space_between_method_declaration_parameter_list_parentheses = false:error
csharp_space_between_parentheses = false:error
csharp_space_between_square_brackets = false:error

# IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.ide0043.severity = error
# IDE0044: Make field readonly
dotnet_diagnostic.ide0044.severity = error
# RCS1174: Remove redundant async/await.
dotnet_diagnostic.RCS1174.severity = error
# VSTHRD103: Call async methods when in an async method
dotnet_diagnostic.VSTHRD103.severity = error
# VSTHRD100: Avoid async void methods
dotnet_diagnostic.VSTHRD100.severity = error
# ASYNC0003: Avoid void returning asynchronous method
dotnet_diagnostic.ASYNC0003.severity = error
# VSTHRD101: Avoid unsupported async delegates
dotnet_diagnostic.VSTHRD101.severity = error
# VSTHRD107: Await Task within using expression
dotnet_diagnostic.VSTHRD107.severity = error
# RCS1229: Use async/await when necessary (for ex: in using).
dotnet_diagnostic.RCS1229.severity = error
# VSTHRD110: Observe result of async calls
dotnet_diagnostic.VSTHRD110.severity = error
# CS4014: Because this call is not awaited, execution of the current method continues before the call is completed
dotnet_diagnostic.CS4014.severity = error
# VSTHRD002: Avoid problematic synchronous waits
dotnet_diagnostic.VSTHRD002.severity = error
# MA0045: Do not use blocking call (make method async)
dotnet_diagnostic.MA0045.severity = error
# RCS1210: Return Task.FromResult instead of returning null.
dotnet_diagnostic.RCS1210.severity = error
#RCS1046: Asynchronous method name should end with 'Async'.
dotnet_diagnostic.RCS1046.severity = error
# RCS1047: Non-asynchronous method name should not end with 'Async'.
dotnet_diagnostic.RCS1047.severity = error
# MA0040: Specify a cancellation token
dotnet_diagnostic.MA0032.severity = error
# MA0040: Flow the cancellation token when available
dotnet_diagnostic.MA0040.severity = error
# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = error
#CA1049: Types that own native resources should be disposable
dotnet_diagnostic.CA1049.severity = error
#CA2236: Call base class methods on ISerializable types
dotnet_diagnostic.CA2236.severity = error
#CA2238: Implement serialization methods correctly
dotnet_diagnostic.CA2238.severity = error
#CA2240: Implement ISerializable correctly
dotnet_diagnostic.CA2240.severity = error
#CS1591 Missing XML comment for publicly visible type or member 'Type_or_Member'
dotnet_diagnostic.CS1591.severity = error
#CA1816: Implement IDisposable correctly  
dotnet_diagnostic.CA1816.severity = silent

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent

# Xml build files
[*.builds]
indent_size = 2

# Xml files
[*.{xml,stylecop,resx,ruleset}]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

# YAML config files
[*.{yml,yaml}]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf

[*.{cmd,bat}]
end_of_line = crlf
